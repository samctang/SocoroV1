@model Socoro.Web.Areas.KAM.Models.OperationIntViewModel;

<script language="JavaScript" type="text/javascript" src="~/lib/jquery/jquery.min.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
<link href="~/css/datatable.css" rel="stylesheet" />
<partial name="_ViewInfo" />
<!--begin::Subheader-->
<div class="subheader py-2 subheader-transparent" id="kt_subheader">

</div>
<!--end::Subheader-->
<!--begin::Entry-->
<div class="d-flex flex-column-fluid">
    <div class="container">
        <!--end::Content-->
        <div class="col-lg-12">
            <!--begin::Advance Table Widget 1-->
            <div class="card card-custom card-stretch gutter-b">
                <!--begin::Header-->
                <div class="card-header border-0 pt-5">
                    <h3 class="card-title align-items-start flex-column">
                        <span class="card-label font-weight-bolder text-dark">Viewing Operation #@Model.OperationViewModel.OperationNo</span>
                    </h3>
                    <div class="d-flex align-items-center flex-wrap">
                        <div class="dropdown mt-2 mb-2 mr-3 ml-5">
                            <button class="btn btn-hover-light-dark dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                View Files
                            </button>
                            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                <input type="button" class="dropdown-item" data-toggle="modal" data-target="#viewInfo" value="View Info" />
                                <a class="dropdown-item" href="#">View SLI</a>
                                <a class="dropdown-item" href="#">View Invoice</a>
                                <a class="dropdown-item" href="#">View Insurance</a>
                                <a class="dropdown-item" href="#">View Booking Sheet</a>
                                <a class="dropdown-item" href="#">Send All Documentation</a>
                            </div>
                        </div>
                        <div class="dropdown mt-2 mb-2 mr-3 ml-5">
                            <button class="btn btn-hover-light-dark dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Input Data
                            </button>
                            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                <a class="dropdown-item" href="#">Input SLI</a>
                                <a class="dropdown-item" href="#">Input Invoice</a>
                                <a class="dropdown-item" href="#">Input Insurance</a>
                            </div>
                        </div>
                        <div class="dropdown mt-2 mb-2 mr-3 ml-5">
                            <button class="btn btn-hover-light-dark dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Request Data
                            </button>
                            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                <a class="dropdown-item" href="#">Request SLI</a>
                                <a class="dropdown-item" href="#">Request Invoice</a>
                            </div>
                        </div>
                        <div class="dropdown mt-2 mb-2 mr-3 ml-5">
                            <button class="btn btn-hover-light-warning dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Set Difficulty
                            </button>
                            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                <a class="dropdown-item" href="#">Easy</a>
                                <a class="dropdown-item" href="#">Medium</a>
                                <a class="dropdown-item" href="#">Hard</a>
                            </div>
                        </div>
                        <div class="dropdown mt-2 mb-2 mr-3 ml-5">
                            <button class="btn btn-hover-light-primary" type="button" id="editOperation">
                                Edit Operation
                            </button>
                        </div>
                    </div>
                </div>
                <!--end::Header-->
                <div class="card-body">
                    <!--begin: Datatable-->
                    <div class="datatable datatable-bordered datatable-head-custom" id="kt_datatable"></div>
                    <!--end: Datatable-->
                </div>
                <!--end::Body-->
                @switch (Model.OperationViewModel.TypeId)
                {
                    case 1:
                        <partial name="_OperationType1" />
                        break;
                }
            </div>
            <!--end::Advance Table Widget 1-->
        </div>
    </div>
    <!--end::Entry-->
</div>

<script>
    var typeId = '';
    var operationProcessId = '';
    var taskId = 0;
    var datatableTasks;
    var initDataTable = function () {
        var datatable = $('#kt_datatable').KTDatatable({
            // datasource definition
            data: {
                type: 'remote',
                source: {
                    read: {
                        url: '@Environment.GetEnvironmentVariable("ApiEndpoint")' + '/OperationProcess/1/' + @Model.OperationViewModel.Id,
                        method: 'GET'
                    },
                },
                pageSize: 10,
            },

            // layout definition
            layout: {
                scroll: true, // enable/disable datatable scroll both horizontal and vertical when needed.
                footer: false // display/hide footer
            },

            // column sorting
            sortable: false,

            pagination: false,

            search: {
                input: $('#kt_datatable_search_query'),
                key: 'generalSearch'
            },

            rows: {
                autoHide: false,
                afterTemplate: function (row, data, index) {
                    $(row).data('typeId', data.typeId);
                }
            },

            columns: [{
                field: 'process',
                title: 'Step',
                template: function (row) {
                    var result = "";
                    $.ajax({
                        url: "@Environment.GetEnvironmentVariable("ApiEndpoint")"+"/OperationProcessType/0/"+ row.typeId,
                        data: {},
                        dataType: 'json',
                        traditional: true,
                        async: false,
                        success: function (data) {
                            result = data;
                        }
                    });
                    return result.data.process;
                }
            }, {
                field: 'description',
                title: 'Objective',
                template: function (row) {
                    var result = "";
                    $.ajax({
                        url: "@Environment.GetEnvironmentVariable("ApiEndpoint")"+"/OperationProcessType/0/"+ row.typeId,
                        data: {},
                        dataType: 'json',
                        traditional: true,
                        async: false,
                        success: function (data) {
                            result = data;
                        }
                    });
                    return result.data.description;
                }
            }, {
                field: 'status',
                title: 'Status',
                template: function (row) {
                    var spanClass = '';
                    switch (row.status) {
                        case 'Not Started':
                            spanClass = 'label-light-danger';
                            break;
                        case 'In Progress':
                            spanClass = 'label-light-primary';
                            break;
                        case 'Completed':
                            spanClass = 'label-light-success';
                            break;
                    }
                    return '<span class="label font-weight-bold label-lg label-inline '+spanClass+'"> ' + row.status + '</span >';
                }
            }]
        });

        $(datatable.table).on('click', 'tbody tr', function () {
            typeId = $(this).data('typeId');
            $.ajax({
                url: "@Environment.GetEnvironmentVariable("ApiEndpoint")" + "/OperationProcess/2/" + @Model.OperationViewModel.Id + "/" + typeId,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                processData: true,
                success: function (result) {
                    operationProcessId = result.data.id;
                    initDataTableTasks = function () {
                        datatableTasks = $('#kt_datatable_Task_'+typeId).KTDatatable({
                            // datasource definition
                            data: {
                                type: 'remote',
                                source: {
                                    read: {
                                        url: "@Environment.GetEnvironmentVariable("ApiEndpoint")" + "/OperationTask/" + operationProcessId,
                                        method: 'GET'
                                    },
                                },
                                pageSize: 10,
                            },

                            // layout definition
                            layout: {
                                scroll: true, // enable/disable datatable scroll both horizontal and vertical when needed.
                                footer: false // display/hide footer
                            },

                            // column sorting
                            sortable: false,

                            pagination: false,

                            search: {
                                input: $('#kt_datatable_search_query'),
                                key: 'generalSearch'
                            },

                            rows: {
                                autoHide: false,
                                afterTemplate: function (row, data, index) {
                                    $(row).data('id', data.id);
                                    $(row).data('note', data.note);
                                    $(row).data('dueDate', data.dueDate);
                                    $(row).data('status', data.status);
                                    if (data != null) {
                                        $('#operationProcessType_Id_' + typeId + '_TaskList').show();
                                    } else {
                                        $('#operationProcessType_Id_' + typeId + '_TaskList').hide();
                                    }
                                }
                            },

                            columns: [{
                                field: 'note',
                                title: 'Note',
                                template: function (row) {
                                    return row.note;
                                }
                            }, {
                                field: 'dueDate',
                                title: 'Due Date',
                                template: function (row) {
                                    var date = row.dueDate;
                                    return date.substring(0,10);
                                }
                            }, {
                                field: 'status',
                                title: 'Status',
                                template: function (row) {
                                    var spanClass = '';
                                    var status = '';
                                    if (row.status == 0) {
                                        spanClass = 'label-light-danger';
                                        status = 'Not Completed';
                                    } else {
                                        spanClass = 'label-light-success';
                                        status = 'Completed';
                                    }
                                    return '<span class="label font-weight-bold label-lg label-inline ' + spanClass + '"> ' + status + '</span >';
                                }
                            }]
                        });

                    };
                    initDataTableTasks();
                    $('#operationProcessType_Id_' + typeId + "_Task").hide();
                    $(datatableTasks.table).on('click', 'tbody tr', function () {
                        taskId = $(this).data('id');
                        var note = $(this).data('note');
                        var dueDate = '';
                        if ($(this).data('dueDate') != null)
                            dueDate = $(this).data('dueDate').toString().substring(0, 10);
                        var status = $(this).data('status');
                        $('#operationProcessType_Id_' + typeId + "_Note").val(note);
                        $('#operationProcessType_Id_' + typeId + "_DueDate").val(dueDate);
                        $('#operationProcessType_Id_' + typeId + "_Status").val(status);
                        $('#operationProcessType_Id_' + typeId + "_Status_Display").show();
                        $('.submitTask').hide();
                        $('.editTask').show();
                        $('#operationProcessType_Id_' + typeId + "_Task").show();
                    });
                }
            });
            $('#operationProcessType_Id_' + typeId + "_Modal").modal('show');
        });
    };

    $(document).ready(function () {
        initDataTable();
    });
</script>


<script>
    $.ajax({
        url: "@Environment.GetEnvironmentVariable("ApiEndpoint")"+"/Customer/"+@Model.OperationViewModel.Agent,
        data: {},
        dataType: 'json',
        traditional: true,
        success: function (result) {
            $('.AgentCompany').text(result.data.companyName);
            $('.AgentEmail').text(result.data.email);
            $('.AgentPhone').text(result.data.contactPhone);
            $('.AgentName').text(result.data.firstName + ' ' + result.data.lastName);
        }
    });

    $.ajax({
        url: "@Environment.GetEnvironmentVariable("ApiEndpoint")"+"/Customer/"+@Model.OperationViewModel.Shipper,
        data: {},
        dataType: 'json',
        traditional: true,
        success: function (result) {
            $('.ShipperCompany').text(result.data.companyName);
            $('.ShipperEmail').text(result.data.email);
            $('.ShipperPhone').text(result.data.contactPhone);
            $('.ShipperName').text(result.data.firstName + ' ' + result.data.lastName);
        }
    });

    $.ajax({
        url: "@Environment.GetEnvironmentVariable("ApiEndpoint")"+"/Customer/"+@Model.OperationViewModel.Consignee,
        data: {},
        dataType: 'json',
        traditional: true,
        success: function (result) {
            $('.ConsigneeCompany').text(result.data.companyName);
            $('.ConsigneeEmail').text(result.data.email);
            $('.ConsigneePhone').text(result.data.contactPhone);
            $('.ConsigneeName').text(result.data.firstName + ' ' + result.data.lastName);
        }
    });

    $('.editTask').on('click', function () {
    $('#' + $(this).attr('name') + '_Task').hide();
    var note = $('#' + $(this).attr('name') + '_Note').val();
    var dueDate = new Date($('#' + $(this).attr('name') + '_DueDate').val());
    var status = $('#' + $(this).attr('name') + '_Status').prop('checked');
    var data = {
        "id": taskId,
        "note": note,
        "dueDate": dueDate,
        "status": status
    };
    $.ajax({
        url: "@Environment.GetEnvironmentVariable("ApiEndpoint")" + "/OperationTask/" + taskId,
        type: 'PUT',
        data: JSON.stringify(data),
        contentType: 'application/json; charset=utf-8',
        processData: true,
        success: function (result) {
            datatableTasks.reload();
        }
    });
});
</script>